用户账户  USER001（ADMIN与一切有关，对所有请求都有足够权限）
试验项目  PROJECT001
任务     TASK001
文件     FILE001
--------------------------------------------------
API规则：（以任务TASK为例，单数返回对象，复数返回数组）
1.CREATE:
POST /task
2.READ:
GET /task
参数里面带taskID
3.UPDATE:
PUT /task
参数里面带taskID
4.DELETE:
DELETE /task
参数里面带taskID
--------------------------------------------------
所有请求的header的Authorization字段带有token
--------------------------------------------------
任何请求如果成功，返回
{
  "statusCode": "1",
  "XXXXXX": 数组或对象
}

任何请求如果出错，返回
{
  "statusCode": "0",
  "error": {
    "message": "权限不足",
    "errorCode": "403",
    .........
  }
}
--------------------------------------------------


--------------------------------------------------
Login模块
1.请求路径  /login
  请求方法  POST
  请求参数  username, password
  参数说明
  参数举例  {
            username: 'asdfx_dgg',
            password: 'asf778zdfs8s'
           }
  请求描述  成功则返回该用户信息userInfo+token（对象）
  响应举例  {
             "statusCode": "1",
             "userInfo": {},
             "token": "adsiufhoubsvhdfouigndioruwfh",
           }
--------------------------------------------------


--------------------------------------------------
Home模块
1.请求路径  /projects
  请求方法  GET
  请求参数  projectName、projectStage、projectInvestigatorName、projectSponsorName、projectInvolvedUserRealName、projectCreatedYearMonth、brief
  参数说明  projectName、projectInvestigatorName、projectSponsorName、projectInvolvedUserRealName、projectCreatedYearMonth如果留空，代表查询所有；projectStage包含preparation\ongoing\ending\supplementing\all；brief代表是否返回的是简要的信息
  参数举例  {
            brief: 'true',
            projectName: '',
            projectInvestigatorName: '',
            projectSponsorName: '',
            projectInvolvedUserRealName: '',
            projectCreatedYearMonth: '',
            projectStage: 'all',
           }
  请求描述  首先验证header中的Authorization中的token，取出userID，限定为该userID参与的项目。再返回[上述参数查询出来的]项目的详细信息（数组）
  响应举例  {
            "statusCode": "1",
            "projects": [
              {
                "projectID": "PROJECT001",
                "projectName": "狂犬1针"
              },
              {
                "projectID": "PROJECT004",
                "projectName": "狂犬4针"
              },
              {
                "projectID": "PROJECT005",
                "projectName": "狂犬5针"
              }
            ]
           }

2.请求路径  /tasks
  请求方法  GET
  请求参数  taskReceivedStatus
  参数说明
  参数举例  {
            taskReceivedStatus: false,
           }
  请求描述  根据userID返回该用户[尚未接受的]所有任务（数组）
  响应举例  {
            "statusCode": "1",
            "tasks": [
                {
                  "taskID": "TASK001",
                  "taskName": "写DMP",
                  "taskBelongedToProjectID": "PROJECT001",
                  "taskBelongedToProjectName": "狂犬1针",
                  "taskCreatorID": "USER001",
                  "taskCreatorName": "刘沛",
                  "taskCreatedTime": "1977-02-27 23:04:41",
                  "taskExecutorID": "USER003",
                  "taskExecutorName": "范扬",
                  "taskReceivedStatus": false,
                  "taskDueTime": "2013-01-03 14:47:25",
                  "taskProgress": 71,
                  "taskCompletedStatus": false,
                  "taskActualCompletedTime": "1971-02-27 18:28:00"
                },
             ]
          }

3.请求路径  /project
  请求方法  GET
  请求参数  projectID
  参数说明
  参数举例  {
            projectID: 'PROJECT001',
           }
  请求描述  检查userID的权限，足够则返回projectID对应的项目的详细信息（对象）
  响应举例  {
            "statusCode": "1",
            "project": {
                "projectID": "PROJECT001",
                "projectName": "狂犬1针",
                "projectManagerID": "USER002",
                "projectManagerName": "王诗远",
                "projectStage": "农切力价",
                "projectBriefIntroduction": "问人其决说战为资华共议进将声值毛建及军型会方化许严给那号出结定带能做取将他联划直重话造千容支难件分学质及意儿六老身结实马号明至说处别根酸。",
                "projectCreatedTime": "2016-01-22",
                "projectExpectedStartTime": "1999-11-14",
                "projectActualStartTime": "1994-12-24",
                "projectExpectedEndTime": "2013-05-31",
                "projectActualEndTime": "1986-03-14",
                "projectSponsor": "商提太领无完门按土及形",
                "projectInvestigator": "生住清入属今直元第期群题里",
                "projectMonitor": "为总子六军计红油工海家内月",
                "projectStatistician": "红素市府圆完果历该从",
                "projectInvolvedUsersID": [
                  "USER003",
                ],
                "projectInvolvedUsersName": [
                  "范扬",
                ],
            }
          }

4.请求路径  /tasks
  请求方法  GET
  请求参数  taskName、projectName、projectID、taskExecutorName、taskReceivedStatus、taskCompletedStatus、brief
  参数说明  taskName、projectName、projectID、taskExecutorName为空则代表查询所有；taskReceivedStatus包含received\not_received\all；taskCompletedStatus包含completed\not_completed\all
  参数举例  {
            brief: false,
            taskName: '',
            projectName: '',
            projectID: 'PROJECT001',
            taskExecutorName: '',
            taskReceivedStatus: 'all',
            taskCompletedStatus: 'all',
           }
  请求描述  返回[上述参数查询出来的]任务的详细信息（数组）
  响应举例  {
            "statusCode": "1",
            "tasks": [
                {
                  "taskID": "TASK001",
                  "taskName": "写DMP",
                  "taskBelongedToProjectID": "PROJECT001",
                  "taskBelongedToProjectName": "狂犬1针",
                  "taskCreatorID": "USER001",
                  "taskCreatorName": "刘沛",
                  "taskCreatedTime": "1975-04-11",
                  "taskExecutorID": "USER003",
                  "taskExecutorName": "范扬",
                  "taskReceivedStatus": true,
                  "taskDueTime": "1979-02-20",
                  "taskProgress": 16,
                  "taskCompletedStatus": false,
                  "taskActualCompletedTime": "1987-07-30"
                },
             ]
          }
--------------------------------------------------


--------------------------------------------------
Task模块
1.请求路径  /tasks
  请求方法  GET
  请求参数  taskName、projectName、projectID、taskExecutorName、taskReceivedStatus、taskCompletedStatus、brief
  参数说明  taskName、projectName、projectID、taskExecutorName为空则代表查询所有；taskReceivedStatus包含received\not_received\all；taskCompletedStatus包含completed\not_completed\all
  参数举例  {
            brief: false,
            taskName: 'ddd',
            projectID: '',
            projectName: 'PROJECT001',
            taskExecutorName: 'ass',
            taskReceivedStatus: 'all',
            taskCompletedStatus: 'all',
           }
  请求描述  返回[上述参数查询出来的]任务的详细信息（数组）
  响应举例  {
            "statusCode": "1",
            "tasks": [
                {
                  "taskID": "TASK001",
                  "taskName": "写DMP",
                  "taskBelongedToProjectID": "PROJECT001",
                  "taskBelongedToProjectName": "狂犬1针",
                  "taskCreatorID": "USER001",
                  "taskCreatorName": "刘沛",
                  "taskCreatedTime": "1975-04-11",
                  "taskExecutorID": "USER003",
                  "taskExecutorName": "范扬",
                  "taskReceivedStatus": true,
                  "taskDueTime": "1979-02-20",
                  "taskProgress": 16,
                  "taskCompletedStatus": false,
                  "taskActualCompletedTime": "1987-07-30"
                },
             ]
          }

2.请求路径  /task
  请求方法  GET
  请求参数  taskID
  参数说明
  参数举例  {
            taskID: 'TASK001',
           }
  请求描述  提供userID与taskID，返回当前taskID对应的任务的详细信息（对象）
  响应举例  {
            "statusCode": "1",
            "task": {
                "taskID": "TASK001",
                "taskName": "写DMP",
                "taskBelongedToProjectID": "PROJECT001",
                "taskBelongedToProjectName": "狂犬1针",
                "taskCreatorID": "USER001",
                "taskCreatorName": "刘沛",
                "taskCreatedTime": "2004-01-04 18:53:07",
                "taskExecutorID": "USER003",
                "taskExecutorName": "范扬",
                "taskReceivedStatus": false,
                "taskDueTime": "1997-06-10 13:35:37",
                "taskProgress": 74,
                "taskCompletedStatus": false,
                "taskActualCompletedTime": "1977-08-03 02:26:27"
              }
            }

TODO:CREATE任务
3.请求路径  /task
  请求方法  POST
TODO:UPDATE任务
4.请求路径  /task
  请求方法  PUT
TODO:DELETE任务
5.请求路径  /task
  请求方法  DELETE
--------------------------------------------------


--------------------------------------------------
File模块
1.请求路径  /files
  请求方法  GET
  请求参数  taskID
  参数说明
  参数举例  {
            taskID: 'TASK001',
           }
  请求描述  提供userID与taskID，返回当前taskID对应的任务所拥有的所有文件的详细信息（数组）
  响应举例  {
          "statusCode": "1",
          "files": [
            {
              "fileID": "FILE001",
              "fileBelongedToTaskID": "TASK001",
              "fileName": "DMP-SOP-V1.0",
              "fileCreateDate": "2019-08-11",
              "fileCreatorID": "USER001",
              "fileCreatorName": "刘沛",
              "fileDescription": "版本已更新，请勿使用！",
              "fileDeleteDate": "2019-08-11",
              "fileDeleteExecutorID": "USER001",
              "fileDeleteExecutorName": "刘沛",
              "fileDownloadURL": ""
            },
          ]

TODO:CREATE文件（文件不需要UPDATE方法）
2.请求路径  /file
  请求方法  POST
TODO:DELETE文件
3.请求路径  /file
  请求方法  DELETE
TODO:READ文件
4.请求路径  /file
  请求方法  GET
--------------------------------------------------


--------------------------------------------------
Project模块
1.请求路径  /projects
  请求方法  GET
  请求参数  projectName、projectStage、projectInvestigatorName、projectSponsorName、projectInvolvedUserRealName、projectCreatedYearMonth、brief
  参数说明  projectName、projectInvestigatorName、projectSponsorName、projectInvolvedUserRealName、projectCreatedYearMonth如果留空，代表查询所有；projectStage包含preparation\ongoing\ending\supplementing\all
  参数举例  {
            brief: 'false',
            projectName: 'ddd',
            projectInvestigatorName: 'ddd',
            projectSponsorName: 'ddd',
            projectInvolvedUserRealName: 'ddd',
            projectCreatedYearMonth: '2019-01',
            projectStage: 'all',
           }
  请求描述  首先验证header中的Authorization中的token，取出userID，限定为该userID参与的项目。再返回[上述参数查询出来的]项目的详细信息（数组）
  响应举例  {
            "statusCode": "1",
            "projects": [
              {
               "projectID": "PROJECT001",
               "projectName": "狂犬1针",
               "projectStage": "要红交民",
               "projectBriefIntroduction": "复离一战太动通难格青给革道度受样统改以使会传气路命东教在在事细向采日院划况次百东周手技精色计指容样需管区东权人水院为养非党传何验始思管华红。",
               "projectCreatedTime": "1996-08-19",
               "projectExpectedStartTime": "2015-07-25",
               "projectActualStartTime": "2007-01-16",
               "projectExpectedEndTime": "1993-02-27",
               "projectActualEndTime": "1973-05-03",
               "projectSponsor": "委究备加马走历三具华我天五",
               "projectInvestigator": "并问很问济程之地而只定世制",
               "projectMonitor": "军运林打花系反难他他克亲需",
               "projectStatistician": "议基属近会容着精",
               "projectInvolvedUsersID": [
                  "USER003",
               ],
               "projectInvolvedUsersName": [
                  "范扬",
               ],
              }
            ]
          }

2.请求路径  /project
  请求方法  GET
  请求参数  projectID
  参数说明
  参数举例  {
            projectID: 'PROJECT001',
           }
  请求描述  提供userID与projectID，返回当前projectID对应的项目的详细信息（对象）
  响应举例  {
            "statusCode": "1",
            "project": {
               "projectID": "PROJECT001",
               "projectName": "狂犬1针",
               "projectStage": "要红交民",
               "projectBriefIntroduction": "复离一战太动通难格青给革道度受样统改以使会传气路命东教在在事细向采日院划况次百东周手技精色计指容样需管区东权人水院为养非党传何验始思管华红。",
               "projectCreatedTime": "1996-08-19",
               "projectExpectedStartTime": "2015-07-25",
               "projectActualStartTime": "2007-01-16",
               "projectExpectedEndTime": "1993-02-27",
               "projectActualEndTime": "1973-05-03",
               "projectSponsor": "委究备加马走历三具华我天五",
               "projectInvestigator": "并问很问济程之地而只定世制",
               "projectMonitor": "军运林打花系反难他他克亲需",
               "projectStatistician": "议基属近会容着精",
               "projectInvolvedUsersID": [
                  "USER003",
               ],
               "projectInvolvedUsersName": [
                  "范扬",
               ],
              }
            }

TODO:CREATE项目
3.请求路径  /project
  请求方法  POST
TODO:UPDATE项目
4.请求路径  /project
  请求方法  PUT
TODO:DELETE项目
5.请求路径  /project
  请求方法  DELETE
--------------------------------------------------


--------------------------------------------------
User模块(全部修改，仿照上述，统一参数)
1.请求路径  /users
  请求参数  userRealName、forTaskExecutor、taskID、brief
  参数说明  realName为用户真名的关键字，留空则默认所有；forTaskExecutor（为true时返回除了admin和taskID所属的项目的manager以外的、所有参加该项目的用户）
  参数举例  {
            brief: false,
            userRealName: 'wwww',
            forTaskExecutor: false,
            taskID: "TASK001",
           }
  请求描述  判断userID的权限，如果足够则返回对应的用户列表
  响应举例  {
              "users": [
                {
                  "username": "user3",
                  "userID": "USER003",
                  "userRealName": "范扬",
                },
                {
                  "username": "user4",
                  "userID": "USER004",
                  "userRealName": "陈振明",
                },
              ],
           }

2.请求路径  /users
  请求参数  projectID、forProjectInvolvedUsers
  参数说明  forProjectInvolvedUsers（为true时返回除了admin以外的、所有参加该项目的用户）
  参数举例  {
            projectID: "PROJECT001",
            forProjectInvolvedUsers: true,
           }
  请求描述  判断userID的权限，如果足够则返回对应的用户列表
  响应举例  {
              "users": [
                {
                  "username": "范扬",
                  "userID": "USER003",
                  "userRealName": "范扬",
                },
                {
                  "username": "陈振明",
                  "userID": "USER004",
                  "userRealName": "陈振明",
                },
              ],
           }

TODO:READ用户
3.请求路径  /user
  请求方法  GET
TODO:CREATE用户
4.请求路径  /user
  请求方法  POST
TODO:UPDATE用户
5.请求路径  /user
  请求方法  PUT
TODO:DELETE用户
6.请求路径  /user
  请求方法  DELETE
--------------------------------------------------